from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
import MySQLdb as mdb


class Ui_SongManagementWindow(object):
    def closeWindows(self):
        current_window = QtWidgets.QApplication.activeWindow()
        if current_window is not None:
            current_window.close()

    def onTableItemClicked(self, item):
        row = item.row()
        song_id = self.song_table.item(row, 0).text()
        song_name = self.song_table.item(row, 1).text()
        song_artist_id = self.song_table.item(row, 2).text()
        song_category_id = self.song_table.item(row, 3).text()
        song_url = self.song_table.item(row, 4).text()
        song_plan = self.song_table.item(row, 5).text()
        
        if song_artist_id == "0":
            self.leArtistname.setText("")
        else:
            db = mdb.connect('localhost', 'root', '', 'music_app')
            query = db.cursor()
            query.execute("SELECT `artist_name` FROM artist_management WHERE artist_id = '"+song_artist_id+"'")
            artist_name = query.fetchone()[0]
            self.leArtistname.setText(artist_name)

        
        self.leID.setText(song_id)
        self.leSongname.setText(song_name)
        self.leArtistID.setText(song_artist_id) 
        self.leCategoryID.setText(song_category_id)
        self.leLink.setText(song_url)
        self.lePlan.setText(song_plan)

    def loadSongData(self):
        db = mdb.connect('localhost', 'root', '', 'music_app')
        query = db.cursor()
        query.execute("SELECT * FROM song_management")
        result = query.fetchall()
        self.song_table.setRowCount(0)
        for row_number, row_data in enumerate(result):
            self.song_table.insertRow(row_number)
            for colum_number, data in enumerate(row_data):
                self.song_table.setItem(row_number, colum_number, QtWidgets.QTableWidgetItem(str(data)))
                
    def loadArtistData(self):
        db = mdb.connect('localhost', 'root', '', 'music_app')
        query = db.cursor()
        query.execute("SELECT * FROM artist_management")
        result = query.fetchall()
        self.artist_table.setRowCount(0)
        for row_number, row_data in enumerate(result):
            self.artist_table.insertRow(row_number)
            for colum_number, data in enumerate(row_data):
                self.artist_table.setItem(row_number, colum_number, QtWidgets.QTableWidgetItem(str(data)))

    def updateData(self):            
        song_id = self.leID.text()
        song_name = self.leSongname.text()
        artist_id = self.leArtistID.text()
        artist_name = self.leArtistname.text()
        category_id = self.leCategoryID.text()
        category = self.leCategory.text()
        link = self.leLink.text()
        plan = self.lePlan.text()
        
        try:
            db = mdb.connect('localhost', 'root', '', 'music_app')
            song = db.cursor()
            artist = db.cursor()
            
            update_song = "UPDATE `song_management` SET `name`=%s, `artist_id`=%s, `category_id`=%s, `link`=%s, `plan_id`=%s WHERE `song_id`=%s"
            song.execute(update_song, (song_name, artist_id, category_id, link, plan, song_id))
            
            update_artist = "UPDATE `artist_management` SET `artist_name`=%s WHERE `artist_id`=%s"
            artist.execute(update_artist, (artist_name, artist_id))

            
            db.commit()
            db.close()
            
            QMessageBox.information(None, "Success!", "Update successful!")
            self.loadSongData()
            self.loadArtistData()
            
        except mdb.Error as e:
            print(f"Error: {e}")
            QMessageBox.critical(None, "Error", "Update fail!")       
        
    def insert(self):
        if self.state == False:
            self.leID.clear()
            self.leSongname.clear()
            self.leArtistID.clear()
            self.leArtistname.clear()
            self.leCategoryID.clear()
            self.leCategory.clear()
            self.leLink.clear()
            self.lePlan.clear()
            
            self.state = True
            self.insert_btn.setText("Insert")
        elif self.state == True:
            song_name = self.leSongname.text()
            artist_id = self.leArtistID.text()
            artist_name = self.leArtistname.text()
            category_id = self.leCategory.text()
            link = self.leLink.text()
            plan = self.lePlan.text()
            
            if len(artist_name) != 0:
                try:
                    db = mdb.connect('localhost', 'root', '', 'music_app')
                    query = db.cursor()
                    
                    update_query = "INSERT INTO `artist_management` (`artist_name`) VALUES (%s)"
                    query.execute(update_query, (artist_name,))
                    
                    db.commit()
                    db.close()
                    
                    QMessageBox.information(None, "Success!", "Insert successful!")
                    self.insert_btn.setText("New")
                    self.state = False
                    self.loadSongData()
                    self.loadArtistData()      
                except mdb.Error as e:
                    print(f"Error: {e}")
                    QMessageBox.critical(None, "Error", "Insert fail!")    
            else:
                if len(song_name) == 0 or len(artist_id) == 0 or len(link) == 0 or len(plan) == 0:
                    QMessageBox.critical(None, "Error", "You need to fill all required information!")
                else:
                    try:
                        db = mdb.connect('localhost', 'root', '', 'music_app')
                        query = db.cursor()
                        
                        update_query = "INSERT INTO `song_management` (`name`, `artist_id`, `category_id`, `link`, `plan_id`) VALUES (%s, %s, %s, %s, %s)"
                        query.execute(update_query, (song_name, artist_id, category_id, link, plan))
                        
                        db.commit()
                        db.close()
                        
                        QMessageBox.information(None, "Success!", "Insert successful!")
                        self.insert_btn.setText("New")
                        self.state = False
                        self.loadSongData()
                        self.loadArtistData()      
                    except mdb.Error as e:
                        print(f"Error: {e}")
                        QMessageBox.critical(None, "Error", "Insert fail!")
                 
                            
    def deleteData(self):
        id_to_delete = self.leID.text()
        try:
            db = mdb.connect('localhost', 'root', '', 'music_app')
            query_song = db.cursor()
            
            delete_song = "DELETE FROM `song_management` WHERE song_id = %s"
            query_song.execute(delete_song, (id_to_delete,))
            
            db.commit()
            db.close()
            
            QMessageBox.information(None, "Success!", "Delete successful!")
            self.leID.clear()
            self.leSongname.clear()
            self.leArtistID.clear()
            self.leArtistname.clear()
            self.leCategoryID.clear()
            self.leCategory.clear()
            self.leLink.clear()
            self.lePlan.clear()

            self.loadSongData()
            self.loadArtistData()            
        except mdb.Error as e:
            print(f"Error: {e}")
            QMessageBox.critical(None, "Error", "Delete fail!")
    
    def backToAdmin(self):
        try:
            from admin_screen import Ui_AdminWindow
            self.home_window = QtWidgets.QMainWindow()
            self.ui = Ui_AdminWindow()
            self.ui.setupUi(self.home_window)
            self.home_window.show()
           
            self.closeWindows()
        except ImportError:
            pass
        
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1149, 676)
        self.new_btn = QtWidgets.QWidget(MainWindow)
        self.new_btn.setStyleSheet("*{\n"
"    font: 10pt \"Arial\";\n"
"}")
        self.new_btn.setObjectName("new_btn")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.new_btn)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget = QtWidgets.QWidget(self.new_btn)
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(16)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.label.setFont(font)
        self.label.setStyleSheet("font: 75 16pt \"Arial\";")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.verticalLayout.addWidget(self.widget)
        self.widget_2 = QtWidgets.QWidget(self.new_btn)
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget_2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget_3 = QtWidgets.QWidget(self.widget_2)
        self.widget_3.setObjectName("widget_3")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_3)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.song_table = QtWidgets.QTableWidget(self.widget_3)
        self.song_table.setObjectName("song_table")
        self.song_table.setColumnCount(6)
        self.song_table.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.song_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.song_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.song_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.song_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.song_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.song_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.song_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.song_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.song_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.song_table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.song_table.setHorizontalHeaderItem(5, item)
        self.verticalLayout_4.addWidget(self.song_table)
        self.artist_table = QtWidgets.QTableWidget(self.widget_3)
        self.artist_table.setObjectName("artist_table")
        self.artist_table.setColumnCount(2)
        self.artist_table.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.artist_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.artist_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.artist_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.artist_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.artist_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.artist_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.artist_table.setHorizontalHeaderItem(1, item)
        self.verticalLayout_4.addWidget(self.artist_table)
        self.category_table = QtWidgets.QTableWidget(self.widget_3)
        self.category_table.setObjectName("category_table")
        self.category_table.setColumnCount(2)
        self.category_table.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.category_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.category_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.category_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.category_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.category_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.category_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.category_table.setHorizontalHeaderItem(1, item)
        self.verticalLayout_4.addWidget(self.category_table)
        self.pushButton_3 = QtWidgets.QPushButton(self.widget_3)
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout_4.addWidget(self.pushButton_3)
        self.horizontalLayout.addWidget(self.widget_3)
        self.widget_4 = QtWidgets.QWidget(self.widget_2)
        self.widget_4.setObjectName("widget_4")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget_4)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.widget_4)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.leID = QtWidgets.QLineEdit(self.widget_4)
        self.leID.setObjectName("leID")
        self.horizontalLayout_2.addWidget(self.leID, 0, QtCore.Qt.AlignRight)
        self.verticalLayout_3.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_3 = QtWidgets.QLabel(self.widget_4)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_3.addWidget(self.label_3)
        self.leSongname = QtWidgets.QLineEdit(self.widget_4)
        self.leSongname.setObjectName("leSongname")
        self.horizontalLayout_3.addWidget(self.leSongname, 0, QtCore.Qt.AlignRight)
        self.verticalLayout_3.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_4 = QtWidgets.QLabel(self.widget_4)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_4.addWidget(self.label_4)
        self.leArtistID = QtWidgets.QLineEdit(self.widget_4)
        self.leArtistID.setObjectName("leArtistID")
        self.horizontalLayout_4.addWidget(self.leArtistID, 0, QtCore.Qt.AlignRight)
        self.verticalLayout_3.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_8 = QtWidgets.QLabel(self.widget_4)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_9.addWidget(self.label_8)
        self.leArtistname = QtWidgets.QLineEdit(self.widget_4)
        self.leArtistname.setObjectName("leArtistname")
        self.horizontalLayout_9.addWidget(self.leArtistname, 0, QtCore.Qt.AlignRight)
        self.verticalLayout_3.addLayout(self.horizontalLayout_9)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_5 = QtWidgets.QLabel(self.widget_4)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_5.addWidget(self.label_5)
        self.leCategoryID = QtWidgets.QLineEdit(self.widget_4)
        self.leCategoryID.setObjectName("leCategoryID")
        self.horizontalLayout_5.addWidget(self.leCategoryID, 0, QtCore.Qt.AlignRight)
        self.verticalLayout_3.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_9 = QtWidgets.QLabel(self.widget_4)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_10.addWidget(self.label_9)
        self.leCategory = QtWidgets.QLineEdit(self.widget_4)
        self.leCategory.setObjectName("leCategory")
        self.horizontalLayout_10.addWidget(self.leCategory, 0, QtCore.Qt.AlignRight)
        self.verticalLayout_3.addLayout(self.horizontalLayout_10)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_6 = QtWidgets.QLabel(self.widget_4)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_6.addWidget(self.label_6)
        self.leLink = QtWidgets.QLineEdit(self.widget_4)
        self.leLink.setObjectName("leLink")
        self.horizontalLayout_6.addWidget(self.leLink, 0, QtCore.Qt.AlignRight)
        self.verticalLayout_3.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_7 = QtWidgets.QLabel(self.widget_4)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_7.addWidget(self.label_7)
        self.lePlan = QtWidgets.QLineEdit(self.widget_4)
        self.lePlan.setObjectName("lePlan")
        self.horizontalLayout_7.addWidget(self.lePlan, 0, QtCore.Qt.AlignRight)
        self.verticalLayout_3.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.delete_btn = QtWidgets.QPushButton(self.widget_4)
        self.delete_btn.setObjectName("delete_btn")
        self.horizontalLayout_8.addWidget(self.delete_btn)
        self.update_btn = QtWidgets.QPushButton(self.widget_4)
        self.update_btn.setObjectName("update_btn")
        self.horizontalLayout_8.addWidget(self.update_btn)
        self.insert_btn = QtWidgets.QPushButton(self.widget_4)
        self.insert_btn.setObjectName("insert_btn")
        self.horizontalLayout_8.addWidget(self.insert_btn)
        self.verticalLayout_3.addLayout(self.horizontalLayout_8)
        self.horizontalLayout.addWidget(self.widget_4, 0, QtCore.Qt.AlignRight)
        self.verticalLayout.addWidget(self.widget_2)
        MainWindow.setCentralWidget(self.new_btn)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "SONG MANAGEMENT"))
        item = self.song_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.song_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.song_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.song_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.song_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.song_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Song ID"))
        item = self.song_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Name"))
        item = self.song_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Artist ID"))
        item = self.song_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Category ID"))
        item = self.song_table.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Link"))
        item = self.song_table.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Plan"))
        item = self.artist_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.artist_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.artist_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.artist_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.artist_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.artist_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Artist ID"))
        item = self.artist_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Name"))
        item = self.category_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.category_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.category_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.category_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.category_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.category_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Category ID"))
        item = self.category_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Category"))
        self.pushButton_3.setText(_translate("MainWindow", "Back"))
        self.label_2.setText(_translate("MainWindow", "ID:"))
        self.label_3.setText(_translate("MainWindow", "Song\'s name:"))
        self.label_4.setText(_translate("MainWindow", "Artist ID:"))
        self.label_8.setText(_translate("MainWindow", "Artist\'s name:"))
        self.label_5.setText(_translate("MainWindow", "Category ID:"))
        self.label_9.setText(_translate("MainWindow", "Category:"))
        self.label_6.setText(_translate("MainWindow", "Link:"))
        self.label_7.setText(_translate("MainWindow", "Plan:"))
        self.delete_btn.setText(_translate("MainWindow", "Delete"))
        self.update_btn.setText(_translate("MainWindow", "Update"))
        self.insert_btn.setText(_translate("MainWindow", "Insert"))
        
        name = self.leSongname.text()
        if len(name) == 0:
            self.state = True
            
        self.insert_btn.clicked.connect(self.insert)
        self.leID.setEnabled(False)
        self.song_table.itemClicked.connect(self.onTableItemClicked)
        self.update_btn.clicked.connect(self.updateData)
        self.delete_btn.clicked.connect(self.deleteData)
        self.pushButton_3.clicked.connect(self.backToAdmin)
        self.category_table.hide()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_SongManagementWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
